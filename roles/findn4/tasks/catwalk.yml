---
- name: catwalk | extract nim
  get_url:
    url: "https://nim-lang.org/download/nim-{{ nim_version }}-linux_x64.tar.xz"
    dest: "{{ home }}"
    mode: 0755

- name: catwalk | extract nim
  unarchive:
    src: "{{ home }}/nim-{{ nim_version }}-linux_x64.tar.xz"
    dest: "{{ home }}"
    remote_src: no

- name: catwalk | remove nim archive file
  file:
    path: "{{ home }}/nim-{{ nim_version }}-linux_x64.tar.xz"
    state: absent

- name: catwalk | add PATH to bashrc
  lineinfile:
    dest: "~/.bashrc"
    line: export PATH="{{ home }}/nim-{{ nim_version }}/bin:$PATH"

- name: catwalk | check if nim is running
  shell: "nim -v"
  environment:
    PATH: "{{ home }}/nim-{{ nim_version }}/bin:{{ lookup('env','PATH') }}"

- name: catwalk | clone the catwalk repository
  git:
    repo: https://github.com/dvolk/catwalk.git
    version: master
    dest: "{{ home }}/catwalk"

- name: catwalk | build the catwalk using nimble
  command:
    chdir: "{{ home }}/catwalk"
    cmd: "nimble -y build -d:release -d:danger -d:no_serialisation"
  environment:
    PATH: "{{ home }}/nim-{{ nim_version }}/bin:{{ lookup('env','PATH') }}"
  become: true

- name: catwalk | install virtual env for testing catwalk
  command:
    chdir: "{{ home }}/catwalk"
    cmd: "pipenv install --skip-lock"
  become: true

- name: catwalk | make tests script executable
  command:
    chdir: "{{ home }}/catwalk"
    cmd: "chmod +x run_tests.sh"
  become: true

- name: catwalk | create .env file
  copy:
    dest: "{{ home }}/catwalk/.env"
    content: "CW_BINARY_FILEPATH={{ home }}/catwalk/cw_server"

- name: catwalk | run tests
  command:
    chdir: "{{ home }}/catwalk"
    cmd: "pipenv run pytest test"
  become: true